// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sibe.API.Data;

#nullable disable

namespace Sibe.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230907105604_CreateInitial")]
    partial class CreateInitial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Sibe.API.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "TTL",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "OPERACIONALES",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "RESISTENCIAS",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "POTENCIOMETROS",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 5,
                            Descripcion = "CAPACITORES",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 6,
                            Descripcion = "PRECISION",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 7,
                            Descripcion = "CRISTALES",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 8,
                            Descripcion = "CMOS",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 9,
                            Descripcion = "BASES",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 10,
                            Descripcion = "TECLADO HEXADECIMAL",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 11,
                            Descripcion = "LCD",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 12,
                            Descripcion = "OSCILOSCOPIO MINI",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 13,
                            Descripcion = "CABLE WIRE WRAP",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 14,
                            Descripcion = "PUERTO SERIAL",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 15,
                            Descripcion = "DISIPADOR",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 16,
                            Descripcion = "SENSORES",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 17,
                            Descripcion = "TRANSISTORES/DIODOS",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 18,
                            Descripcion = "ADC/DAC",
                            Tipo = 2
                        },
                        new
                        {
                            Id = 19,
                            Descripcion = "MULTIMETRO",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 20,
                            Descripcion = "GENERADOR FUNCIONES",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 21,
                            Descripcion = "FUENTE",
                            Tipo = 1
                        },
                        new
                        {
                            Id = 22,
                            Descripcion = "MONITOR",
                            Tipo = 1
                        });
                });

            modelBuilder.Entity("Sibe.API.Models.Componente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Componentes");
                });

            modelBuilder.Entity("Sibe.API.Models.Equipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Activo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<string>("Marca")
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .HasColumnType("longtext");

                    b.Property<string>("Observaciones")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Serie")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("EstadoId");

                    b.ToTable("Equipo");
                });

            modelBuilder.Entity("Sibe.API.Models.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "EN BODEGA"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "EN MANTENIMIENTO"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "AGOTADO"
                        });
                });

            modelBuilder.Entity("Sibe.API.Models.Componente", b =>
                {
                    b.HasOne("Sibe.API.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Sibe.API.Models.Equipo", b =>
                {
                    b.HasOne("Sibe.API.Models.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sibe.API.Models.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Estado");
                });
#pragma warning restore 612, 618
        }
    }
}
